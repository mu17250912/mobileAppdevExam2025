rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Require authentication for all documents
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // Users collection: users can read their own data, admins can read/write all
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }

    // Rides collection: drivers can create, update, delete their own rides; passengers can read
    match /rides/{rideId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null &&
        resource.data.driverId == request.auth.uid;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }

    // Bookings collection: users can create bookings, read their own, drivers can update bookings for their rides
    match /bookings/{bookingId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null &&
        (resource.data.passengerId == request.auth.uid ||
         resource.data.driverId == request.auth.uid);
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }

    // Admin-only collections
    match /admin/{docId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }
  }
} 